Starting audit...
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:16:17: Parameter card should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:23:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:27:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:27:25: Parameter mana should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:31:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:35:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:35:32: Parameter description should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:39:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:43:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:43:27: Parameter colors should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:47:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:51:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:51:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:64:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\Card.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:7:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:11:9: Variable 'attacked' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:16:21: Parameter playerHero should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:18:18: '30' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:22:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:26:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:26:27: Parameter health should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:30:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'getAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'getAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:34:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'setAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'setAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:34:29: Parameter attacked should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:38:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'loseHealthAfterAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'loseHealthAfterAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:38:39: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:43:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:43:28: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:43:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\HeroCard.java:65:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:6:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:18:23: Parameter card should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:26:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:30:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:30:27: Parameter health should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:34:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:38:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:38:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:46:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getIsFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getIsFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:50:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setIsFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setIsFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:50:29: Parameter isFrozen should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:54:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:58:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:58:29: Parameter attacked should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:62:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'determineRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'determineRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:62:29: Parameter playerIdx should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:63: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:65:24: '3' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:78:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'isHitByAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'isHitByAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:78:31: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:78:35: 'attackDamage' hides a field. [HiddenField]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:82:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'useAttackOnCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'useAttackOnCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:82:32: Parameter attackedCard should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:91:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:91:27: Parameter attackedCard should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:127:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'useAttackOnHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'useAttackOnHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:127:32: Parameter hero should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\cards\MinionCard.java:136:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\fileio\Coordinates.java:9:23: Parameter x should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\fileio\Coordinates.java:9:30: Parameter y should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:6:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:17:9: Variable 'gamesPlayed' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:18:19: Variable 'gamesPlayerOneWon' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:19:19: Variable 'gamesPlayerTwoWon' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:27:5: Class 'GameManager' looks like designed for extension (can be subclassed), but the method 'multipleGames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameManager' final or making the method 'multipleGames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:27:31: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:27:49: Parameter objectNode should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:27:71: Parameter inputData should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:46: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:48:10: Empty statement. [EmptyStatement]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:51:5: Class 'GameManager' looks like designed for extension (can be subclassed), but the method 'initializePlayerOne' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameManager' final or making the method 'initializePlayerOne' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:51:39: Parameter inputData should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:51:56: Parameter startGame should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:78:5: Class 'GameManager' looks like designed for extension (can be subclassed), but the method 'initializePlayerTwo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameManager' final or making the method 'initializePlayerTwo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:78:39: Parameter inputData should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\GameManager.java:78:56: Parameter startGame should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:18:9: Variable 'manaPerRound' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:19:9: Variable 'currentTurn' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:20:23: Variable 'turns' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:21:9: Variable 'gameEnded' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30: Line is longer than 100 characters (found 237). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:23: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:41: Parameter startGame should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:67: Parameter actions should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:100: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:117: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:135: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:153: Parameter gamesPlayerOneWon should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:186: Parameter gamesPlayerTwoWon should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:219: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:30:235: ')' is preceded with whitespace. [ParenPad]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:41: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:43:32: '10' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:58: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69: Line is longer than 100 characters (found 230). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'actOnCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'actOnCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:5: Method length is 354 lines (max allowed is 150). [MethodLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:29: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:47: Parameter startGame should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:73: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:94: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:111: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:129: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:147: Parameter gamesPlayerOneWon should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:180: Parameter gamesPlayerTwoWon should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:69:213: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:131: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:133: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:141: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:143: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:151: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:153: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:162: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:164: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:200: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:202: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:210: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:212: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:221: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:223: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:225: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:234: Line is longer than 100 characters (found 170). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:238: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:240: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:242: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:246:70: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:249: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:251: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:285: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:293: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:301: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:348: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:349: Line is longer than 100 characters (found 171). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:349:166: '3' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:360: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:361: Line is longer than 100 characters (found 171). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:361:91: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:361:167: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:368: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:378:37: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:379:41: '5' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:383: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424: Line is longer than 100 characters (found 144). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:31: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:49: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:70: Parameter deckPlayerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:424:107: Parameter deckPlayerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:31: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:49: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:70: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:444:88: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:459:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:459:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:459:31: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:459:49: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:459:70: Parameter startGame should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'endPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'endPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:30: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:47: Parameter player should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:62: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:475:80: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:479:29: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:480:33: '5' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:483:71: '3' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:27: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:45: Parameter player should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:60: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:497:81: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:32: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:50: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:71: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:522:89: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:542:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:542:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:542:33: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:542:51: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:542:72: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:547:29: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:549:33: '5' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:562:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getCardAtPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:562:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:562:35: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:562:53: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:562:74: Parameter table should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:576: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:5: Class 'Rounds' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rounds' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:31: Parameter output should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:49: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:70: Parameter playerOne should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\game\Rounds.java:582:88: Parameter playerTwo should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:3:8: Unused import - cards.HeroCard. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:4:8: Unused import - cards.MinionCard. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:11:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:12:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:14:8: Unused import - player.Player. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:15:8: Unused import - table.GameTable. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:22:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:23:8: Unused import - java.util.Collections. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:25:8: Unused import - java.util.Random. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\main\Main.java:27:15: Unused import - java.util.Collections.shuffle. [UnusedImports]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:3:13: Using the '.*' form of import should be avoided - cards.*. [AvoidStarImport]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:8:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:9:9: Variable 'backRow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:10:9: Variable 'frontRow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:17:21: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:17:22: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:19:19: Parameter playerIdx should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:19:34: Parameter playerDeck should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:19:68: Parameter playerHero should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:22:23: '3' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:33:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:37:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:37:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:41:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getBackRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getBackRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:45:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setBackRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setBackRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:45:28: Parameter backRow should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:49:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:53:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:53:29: Parameter frontRow should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:57:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:61:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:61:29: Parameter gamesWon should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:65:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getManaLeftToUse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getManaLeftToUse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:69:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setManaLeftToUse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setManaLeftToUse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:69:34: Parameter manaLeftToUse should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:73:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:77:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:77:31: Parameter playerHero should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:81:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:85:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:85:31: Parameter playerHand should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:89:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:93:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:93:31: Parameter playerDeck should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:100:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addCardToHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addCardToHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:110:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'checkCardInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'checkCardInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:110:39: Parameter handIdx should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:111: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:122:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:122:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:122:25: Parameter mana should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:129:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'useMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'useMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:129:25: Parameter mana should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:136:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'winsGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'winsGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\player\Player.java:136:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:14:33: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:15:29: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:26:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'getTankCoordinates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'getTankCoordinates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:26:54: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:30:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:30:27: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:30:38: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:30:47: Parameter card should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:31:31: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:40:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:40:28: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:40:37: Parameter col should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:41:31: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:46:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'getCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'getCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:46:31: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:46:40: Parameter col should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:47:31: '4' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:53:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'isSpaceOnRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'isSpaceOnRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:53:33: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:55:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:55:37: '5' is a magic number. [MagicNumber]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:60:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'checkTanks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'checkTanks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:60:27: Parameter x should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:60:34: Parameter y should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:60:41: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:62:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:63: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:70:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'searchAndRemoveTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'searchAndRemoveTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:70:37: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:70:46: Parameter col should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:82:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'updateTankCoord' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'updateTankCoord' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:82:33: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:82:44: Parameter i should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:94:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'removeTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'removeTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:94:28: Parameter x should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:94:35: Parameter y should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:94:42: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:102:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'freezes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'freezes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:102:25: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:109:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'removeHealthiestCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'removeHealthiestCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:109:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:109:38: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:127:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'injectHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'injectHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:127:30: Parameter row should be final. [FinalParameters]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:135:5: Class 'GameTable' looks like designed for extension (can be subclassed), but the method 'buffAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameTable' final or making the method 'buffAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:135:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema0\tema\.\src\table\GameTable.java:135:28: Parameter row should be final. [FinalParameters]
Audit done.
Checkstyle ends with 338 errors.
